/**:
  ros__parameters:
    autopilot:
      # Update rate
      rate: 50.0 # Hz
      # Definition of the controller that will perform the tracking of references of the different operation modes
      controller: "PX4Controller"
      # Configurations needed by the PX4 controller
      PX4Controller:
        publishers:
          control_position: "fmu/in/position"
          control_attitude: "fmu/in/force/attitude"
          control_attitude_rate: "fmu/in/force/attitude_rate"
      # Define the default operation mode (the one which the autopilot initializes at)
      default_mode: "DisarmMode"
      # Define all the existing operation modes
      modes: ["DisarmMode", "ArmMode", "TakeoffMode", "LandMode", "HoldMode", "WaypointMode", "FollowTrajectoryMode", "PassThroughMode"]
      # Configurations of each operating mode:
      # 1) Define the valid transitions from a given operation mode to other operation modes
      # 2) Fallback mode if something goes wrong
      # 3) Other specific operating mode configuration
      DisarmMode: 
        valid_transitions: ["ArmMode"]
        fallback: "DisarmMode"
        disarm_service: "fmu/kill_switch"
      ArmMode: 
        valid_transitions: ["DisarmMode", "TakeoffMode", "HoldMode", "WaypointMode", "FollowTrajectoryMode", "PassThroughMode"]
        fallback: "DisarmMode"
        arm_service: "fmu/arm"
        offboard_service: "fmu/offboard"
      TakeoffMode: 
        valid_transitions: ["LandMode", "HoldMode", "WaypointMode", "FollowTrajectoryMode", "PassThroughMode"]
        fallback: "HoldMode"
        on_finish: "HoldMode"
        takeoff_altitude: -1.0 # m (NED)
        set_takeoff_altitude_service: "autopilot/set_takeoff"
      LandMode: 
        valid_transitions: ["DisarmMode", "ArmMode", "TakeoffMode", "HoldMode", "WaypointMode", "FollowTrajectoryMode", "PassThroughMode"]
        fallback: "HoldMode"
        on_finish: "DisarmMode"
        land_speed: 0.2 # m/s
        land_detected_treshold: 0.1 # m/s
        countdown_to_disarm: 3.0 # s
      HoldMode: 
        valid_transitions: ["LandMode", "WaypointMode", "FollowTrajectoryMode", "PassThroughMode"]
        fallback: "LandMode"
      WaypointMode: 
        valid_transitions: ["LandMode", "HoldMode", "FollowTrajectoryMode", "PassThroughMode"]
        fallback: "HoldMode"
        set_waypoint_service: "autopilot/set_waypoint"
      FollowTrajectoryMode: 
        valid_transitions: ["LandMode", "HoldMode", "WaypointMode", "PassThroughMode"]
        fallback: "HoldMode"
        on_finish: "HoldMode"
        # Gains for PIDs on [x, y, z]
        gains:
          kp: [8.0, 8.0, 8.0]   # Proportional gain
          kd: [3.0, 3.0, 3.0]   # Derivative gain
          ki: [0.2, 0.2, 0.1]   # Integral gain
          kff: [0.0, 0.0, 1.0]  # Feed-forward gain
          min_output: [-20.0, -20.0, -20.0] # Minimum output of each PID
          max_output: [20.0, 20.0, 20.0]
        # Services to generate reference trajectories
        reset_path_topic: "autopilot/trajectory/reset"
        add_arc_topic: "autopilot/trajectory/add_arc"
        add_line_topic: "autopilot/trajectory/add_line"
        add_circle_topic: "autopilot/trajectory/add_circle"
        add_lemniscate_topic: "autopilot/trajectory/add_lemniscate"
        # Topics for debugging
        sampled_path_topic: "autopilot/trajectory/path"
        pid_debug_topic: "autopilot/statistics/pid"
      PassThroughMode: 
        valid_transitions: ["DisarmMode", "ArmMode", "TakeoffMode", "LandMode", "HoldMode", "WaypointMode", "FollowTrajectoryMode"]
        fallback: "HoldMode"
      # Topics configurations
      publishers:
        control_position: "fmu/in/position"
        control_attitude: "fmu/in/force/attitude"
        control_attitude_rate: "fmu/in/force/attitude_rate"
        status: "autopilot/status"
      subscribers:
        state: "fmu/filter/state"
        status: "fmu/status"
        constants: "fmu/constants"
      services:
        set_mode: "autopilot/change_mode"